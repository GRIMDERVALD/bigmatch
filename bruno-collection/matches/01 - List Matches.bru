meta {
  name: List Tournament Matches
  type: http
  seq: 1
}

get {
  url: {{api_url}}/matches/tournaments/{{tournament_id}}/matches
  body: none
  auth: none
}

tests {
  test("Matches list returned", function() {
    expect(res.status).to.equal(200);
    expect(res.body).to.be.an("array");
  });
  
  test("Matches have required fields", function() {
    if (res.body.length > 0) {
      expect(res.body[0]).to.have.property("team_a");
      expect(res.body[0]).to.have.property("team_b");
      expect(res.body[0]).to.have.property("status");
    }
  });
}

script:post-response {
  if (res.status === 200 && res.body.length > 0) {
    bru.setEnvVar("match_id", res.body[0].id);
    console.log("First match ID:", res.body[0].id);
    console.log("Match:", res.body[0].team_a.name, "vs", res.body[0].team_b.name);
  }
}